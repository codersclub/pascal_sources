<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Вывод текста - Программирование X Window средствами Free Pascal - Исходники.Ру</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="description" content='Курс лекций по программированию на FPC в X Window на платформе Unix. Вывод текста.'>
<meta name="keywords" content="pascal, sources, source code, graph, kde, unix, window, графика ">
<LINK REL=STYLESHEET TYPE="text/css" HREF="/sources.css"></head><BODY><center>

<!--#include virtual="/t_hmenu.htm"-->


<div align='left'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='blueb' href="/graph/index.htm">Графика</a>&nbsp&nbsp;&nbsp;&nbsp;<small>&gt;&gt;</small>
<br>&nbsp;&nbsp;&nbsp;<img border=0 height=4 width=50% align='top' src="/img/b.gif" alt="">
<br>&nbsp;
</div>


<TABLE cellSpacing=0 cellpadding=0 width=97% border=0>
<TR><TD colspan=3><p style="margin-left:50px">


<CENTER>
<H1>Программирование в X-Window
<br>средствами Free Pascal</H1>
Авторы: А.П. Полищук, С.А. Семериков
<BR>
[Оформление в HTML: <a class=blue href="mailto:rswag@sources.ru">Valery Votintsev</a>]
</CENTER>

<br>
<A class=blue HREF="../xwinfpc.htm">Содержание</a>

<br>
1. <A class=blue HREF="xbasics.htm">Основы программирования в системе X Window</A>
<BR>
1.2. <A class=blue HREF="gr_text.htm">Текст и графика</A>
<BR>
<hr>
<!-- begin CONTENT -->
<h2>1.2.3. Вывод текста</h2>

<dir>

Текст был и, видимо, будет важным средством
информационного обмена между программами и пользователем. X Window позволяет
выводить строки в любой части окна, используя большое количество шрифтов.

<br>
<br>
Для вывода текста используются процедуры
<code>XDrawString()</code>,
<code>XDrawImageString()</code> и
<code>XDrawText()</code>. Каждая из них имеет две версии. Первая
используется для шрифтов, имеющих не более 256 символов. Если же символов
больше ("большие" шрифты), то применяется вторая версия. Функции, работающие
с "большими" шрифтами, имеют имена
<code>XDrawString16()</code>,
<code>XDrawImageString16()</code> и
<code>XDrawText16()</code>. Параметры процедур, выводящих текст, задают
дисплей, окно, графический контекст, строку, ее положение и т.д. Рисование
идет в соответствии с областью отсечения контекста. Буквы или их части,
находящиеся за пределами области отсечения, не изображаются. Наиболее часто
употребляется процедура
<code>XDrawString()</code> (<code>XDrawString16()</code>).
Ее параметры дают строку, ее длину и
положение в окне. Текст рисуется цветом переднего плана, выбранного в GC.

<br>
<br>

Функция
<code>XDrawImageString()</code> (<code>XDrawImageString16()</code>)
похожа на предыдущую процедуру с той лишь
разницей, что фон символов при рисовании закрашивается цветом фона,
установленного в GC.
<code>XDrawString()</code> и
<code>XDrawImageString()</code> выводят символы, используя шрифт,
установленный в GC.

<br>
<br>

<code>XDrawText()</code>
(<code>XDrawText16()</code>) позволяет рисовать
несколько строк сразу, используя при этом разные шрифты. Каждая рисуемая
единица задается структурой
<code>TXTextItem</code>.

<br>
<br>

Процедура
<code>XDrawText16()</code> использует структуру
<code>TXDrawText16</code>.

<br>
<br>

Поле <code>font</code> в
приведенных структурах
(<code>TXTextItem</code> и
<code>TXDrawText16</code>) задает шрифт, используемый для рисования. Если
значение поля <code>font</code> -
<code>None</code>, то применяется шрифт, выбранный в
GC.

<br>
<br>

Как мы уже говорили ранее, текст, как правило, рисуется
шрифтом, выбранным в графическом контексте. X версии 11.4 и ниже поддерживает
только растровые шрифты, а начиная с версии 11.5 и выше X Window имеет также
и векторные шрифты.

<br>
<br>

В растровых шрифтах каждому символу соответствует
некоторый битовый шаблон, определяющий порядок закраски пикселей при
рисовании. Если бит шаблона равен 1, то соответствующий элемент изображения
закрашивается цветом переднего плана GC, если же он равен 0, то он
закрашивается либо цветом фона, либо вообще не рисуется.

<br>
<br>

В векторных шрифтах каждый символ описывается
последовательностью линий, которые, будучи составлены вместе, и дают его
изображение. Размеры символов варьируются от шрифта к шрифту. Для их описания
используется структура
<code>TXCharStruct</code>. Сам шрифт описывается структурой
<code>TXFontStruct</code>.

<br>
<br>

Перед тем, как выводить текст, используя тот или иной
шрифт, последний должен быть загружен в X Window и выбран в графическом
контексте.

<br>
<br>

Загрузка шрифта осуществляется процедурой
<code>XLoadFont()</code>. Она берет в качестве аргумента
имя шрифта, находит его и возвращает программе соответствующий идентификатор.
Этот идентификатор передается затем процедуре
<code>XSetFont()</code>, чтобы выбрать шрифт в GC. Заметим, что реально
шрифт с данным именем загружается сервером лишь один раз. После этого при
обращениях к <code>XLoadFont()</code> с тем
же именем шрифта, функция возвращает ссылку на шрифт, уже находящийся в
памяти компьютера.

<br>
<br>

По умолчанию X ищет файл со шрифтом в директории
<code>/usr/lib/X11/fonts</code>. Программист
может задать дополнительные директории для поиска с помощью процедуры
<code>XSetFontPath()</code>.

<br>
<br>

Имя шрифта в X начинается с "-" и состоит из двух частей.
Между ними стоит "--". В свою очередь, каждая из частей состоит из
полей-слов, разделенных "-".

<br>
<br>
В первой части указывается следующее:

<UL type=square>

<LI>изготовитель шрифта (foundry), например adobe;</LI>

<LI>семейство шрифта (font family), например courier,
helvetica;</LI>

<LI>жирность шрифта (weight), например bold;</LI>

<LI>наклон шрифта (slant);</LI>

<LI>ширина букв шрифта (width).</LI>
</UL>
<br>

Во второй части указывается следующее:

<UL type=square>

<LI>размер шрифта в пикселах (pixels);</LI>

<LI>размер шрифта в десятых долях "точки" ("точка" равна
1/72 дюйма);</LI>

<LI>горизонтальное разрешение устройства, для которого
разработан шрифт (horizontal resolution in dpi); величина измеряется в числе
точек на дюйм;</LI>

<LI>вертикальное разрешение устройства, для которого
разработан шрифт (vertical resolution in dpi); величина измеряется в числе
точек на дюйм;</LI>

<LI>тип шрифта (spacing); возможные значения параметра
следующие: <I>m</I> - шрифт с фиксированной шириной символов;
<I>p</I> - пропорциональный шрифт с переменной шириной символов;
</LI>

<LI>средняя ширина символов шрифта, измеренная в десятых
долях пикселя (average width);</LI>

<LI>множество символов шрифта в кодировке ISO
(International Standards Organisation) или других (character
set).</LI>
</UL>
<br>

Ниже приведен пример названия шрифта.

<br>
<br>

<code>
&nbsp;&nbsp;-adobe-courier-bold-o-normal--10-100-75-75-m-60-iso8859-1
</code>

<br>
<br>

Части имени могут заменяться символом "*" или "?".
В этом случае X подбирает шрифт, сличая имена имеющихс
шрифтов с предоставленным шаблоном, так, как это делается при поиске файлов в
UNIX. Например, шаблону

<br>
<br>
&nbsp;<code>*charter-medium-i-*-240-*</code>

<br>
<br>
соответствуют имена

<br>
<br>

<code>
&nbsp;&nbsp;-hit-charter-medium-i-normal-25-240-75-75-p-136-iso8859-1
<br>
&nbsp;&nbsp;-hit-charter-medium-i-normal-33-240-100-75-p-136-iso8859-1
</code>

<br>
<br>

Названия шрифтов, доступных в системе, хранятся в
соответствующей базе данных. Получить список имен шрифтов можно с помощью
процедуры <code>XListFonts()</code> или
<code>XListFontsWithInfo()</code>. Список
шрифтов, возвращаемый этими функциями, должен быть освобожден вызовом
<code>XFreeFontNames()</code>.

<br>
<br>

Некоторые шрифты, такие как
<code>fixed</code>" или
"9x15", доступны всегда.

Получить информацию о загруженном шрифте можно с помощью
функции <code>XQueryFont()</code>, которая
возвращает заполненную структуру типа
<code>XFontInfo()</code>. Одновременно загрузить шрифт и получить информацию
о нем можно с помощью процедуры
<code>XLoadQueryFont()</code>.

<br>
<br>

Когда информация о шрифте больше не нужна, ее следует
освободить с помощью
<code>XFreeFontInfo()</code>. Когда становится не нужен и сам шрифт,
последний надо "сбросить", обратившись к процедуре
<code>XUnloadFont()</code>. Функция
<code>XFreeFont()</code> объединяет в себе
<code>XFreeFontInfo()</code> и
<code>XUnloadFont()</code>.

<br>
<br>

Следующий фрагмент кода загружает шрифт
"<code>courier</code>", создает GC и выводит с его помощью
строку "Hello, world!".

<pre>
var
  prDisplay : PDisplay;
  prGC : TGC;
  nWnd : TWindow;
  prFontInfo : PXFontStruct;
. . . . . . . 
(* Загружаем шрифт *)
prFontInfo := XLoadQueryFont(prDisplay, '*-courier-*' );
if ( prFontInfo = NIL) then
begin
  writeln('Font not found!');
  halt(1);
end;
. . . . . . .
(* Создаем GC и рисуем строку *)
prGC := XCreateGC(prDisplay, nWnd, 0, NIL);
XSetForeground (prDisplay, prGC, XBlackPixel(prDisplay, 0));
XSetFont (prDisplay, prGC, prFontInfo^.fid);
XDrawString (prDisplay, nWnd, prGC, 10, 50, 'Hello, world!',
      strlen ('Hello, world!') );
XFreeGC (prDisplay, prGC);
. . . . . . .
(* "Сбрасываем" шрифт *)
XFreeFont (prDisplay, prFontInfo);
. . . . . . .
</pre>

Для отображения символов кириллицы необходимо использовать
один из локализованных шрифтов в той кодировке, которая поддерживается вашей
системой (как правило, это koi8-r (koi8-u)). По умолчанию загружается первый
из шрифтов, соответствующий шаблону, поэтому для корректного отображени
текста с кириллицей необходимо в шаблоне указывать кодировку.

</dir>
<br>


<!-- end of CONTENT -->
<!--#include virtual="/t_footer.htm"-->
