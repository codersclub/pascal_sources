<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html><head><title>Характеристики графического контекста - Программирование X Window средствами Free Pascal - Исходники.Ру</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="description" content='Курс лекций по программированию на FPC в X Window на платформе Unix. Характеристики графического контекста.'>
<meta name="keywords" content="pascal, sources, source code, graph, kde, unix, window, графика ">
<LINK REL=STYLESHEET TYPE="text/css" HREF="/sources.css"></head><BODY><center>

<!--#include virtual="/t_hmenu.htm"-->


<div align='left'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a class='blueb' href="/graph/index.htm">Графика</a>&nbsp&nbsp;&nbsp;&nbsp;<small>&gt;&gt;</small>
<br>&nbsp;&nbsp;&nbsp;<img border=0 height=4 width=50% align='top' src="/img/b.gif" alt="">
<br>&nbsp;
</div>


<TABLE cellSpacing=0 cellpadding=0 width=97% border=0>
<TR><TD colspan=3><p style="margin-left:50px">


<CENTER>
<H1>Программирование в X-Window
<br>средствами Free Pascal</H1>
Авторы: А.П. Полищук, С.А. Семериков
<BR>
[Оформление в HTML: <a class=blue href="mailto:rswag@sources.ru">Valery Votintsev</a>]
</CENTER>

<br>
<A class=blue HREF="../xwinfpc.htm">Содержание</a>

<br>
1. <A class=blue HREF="xbasics.htm">Основы программирования в системе X Window</A>
<BR>
1.2. <A class=blue HREF="gr_text.htm">Текст и графика</A>
<BR>
<hr>
<!-- begin CONTENT -->
<h2>1.2.2. Характеристики графического контекста</h2>

<dir>

В предыдущем разделе мы говорили, что GC имеет ряд
атрибутов, воздействующих на вывод изображений. Для текста это цвет и шрифт,
для линий - цвет и толщина и т.д. Как уже упоминалось выше, атрибуты
контекста задаются в момент его создания. Потом они могут меняться с помощью
функции <code>XChangeGC()</code>. Кроме
того, X поддерживает специальные функции для изменения параметров GC.

<br>
<br>

Ниже перечисляются основные характеристики графического
контекста и процедуры, меняющие их.

<br>
<br>

<I>Режим рисования</I> (поле <code>Xfunction</code> в структуре
<code>TXGCValues</code>) указывает, каким образом комбинируются
при рисовании цвет графики и цвет изображения, на которое
накладывается графика. Данное поле задает некоторую логическую функцию.
Возможные значения:

<pre>
  GXclear         0x0  0
  GXand           0x1  src AND dst
  GXandReverse    0x2  src AND NOT dst
  GXcopy          0x3  src
  GXandInverted   0x4  (NOT src) AND dst
  GXnoop          0x5  dst
  GXxor           0x6  src XOR dst
  GXor            0x7  src OR dst
  GXnor           0x8  (NOT src) AND (NOT dst)
  GXequiv         0x9  (NOT src) XOR dst
  GXinvert        0xa  NOT dst
  GXorReverse     0xb  src OR (NOT dst)
  GXcopyInverted  0xc  NOT src
  GXorInverted    0xd  (NOT src) OR dst
  GXnand          0xe  (NOT src) OR (NOT dst)
  GXset           0xf  1
</pre>

По умолчанию
<code>Xfunction</code> равно
<code>GXcopy</code>. Устанавливается режим рисования с помощью процедуры
<code>XSetFunction()</code>.

<br>
<br>

<I>Изменяемые цветовые плоскости</I>. Каждый пиксель
задается с помощью <code>N</code> бит. Биты
с одним номером во всех пикселях образуют как бы плоскости, идущие
параллельно экрану. Получить число плоскостей для конкретного дисплея можно с
помощью функции
<code>XDisplayPlanes()</code>. Поле <I>plane_mask</I> структуры
графического контекста определяет, в каких плоскостях идет рисование при
вызове функций X. Если бит поля установлен, то при рисовании соответствующая
плоскость изменяется, в противном случае она не затрагивается.

<br>
<br>

<I>Цвет переднего плана и фона</I> (поля
<code>foreground</code> и
<code>background</code>) задают цвета, используемые при рисовании линий
текста и других графических элементов. Устанавливаются значения указанных
полей функциями
<code>XSetForeground()</code> и
<code>XSetBackground()</code> соответственно.

<br>
<br>

<I>Атрибуты, влияющие на рисование линий.</I> Шесть
параметров определяют вид прямых, дуг и многоугольников, изображаемых с
помощью X Window.

<OL>

<LI>Поле
<code>line_width</code> задает толщину линии в пикселях. Нулевое значение
поля соответствует тому, что линия должна быть толщиной в один пиксель и
рисоваться с помощью наиболее быстрого алгоритма для данного устройства
вывода.
<br>
<br>
</LI>

<LI>Поле
<code>line_style</code> определяет тип линии. Возможные значения
следующие:

<UL type=square>

<LI><code>LineSolid</code> - сплошная линия,</LI>

<LI><code>LineOnOffDash</code> - пунктирная линия; промежутки между
штрихами не закрашиваются;</LI>

<LI><code>LineDoubleDash</code> - пунктирная линия; промежутки между
штрихами закрашиваются цветом фона;</LI>
</UL>

<br>

</LI>

<LI>Параметр
<code>cap_style</code> определяет вид линии в крайних точках, если ее ширина
больше 1 пикселя. На рис. 1.4 приведены значения параметра и соответствующий
вид конца линии.

<br>

<P ALIGN="CENTER"><IMG SRC="images/image9.gif" WIDTH=360 HEIGHT=384>

<br>Рис. 1.4. Значения параметра
<code>cap_style</code> графического контекста</P>

</LI>

<LI>Поле
<code>join_style</code> определяет, как соединяются линии друг с другом. На
рис. 1.5 показаны соответствующие возможности. Параметр имеет смысл при
толщине линии большей 1.

<BR>

<P ALIGN="CENTER"><IMG SRC="images/image10.gif" WIDTH=499 HEIGHT=220>
<br>Рис. 1.5. Значения параметра
<code>join_style</code> графического контекста</P>

</LI>

<LI>Если линия пунктирная, то поле
<code>dashes</code> дает длину пунктира и промежутков в
пикселях.
<br>
<br>
</LI>

<LI>Параметр
<code>dash_offset</code> указывает, с какого места начинать рисование первой
черточки пунктирной линии.

</OL>

Для установки параметров линии используется процедура
<code>XSetLineAttributes()</code>.

<br>
<br>


<I>Шрифт.</I> Поле
<code>font</code> определяет шрифт, используемый для вывода текста. Задать
этот параметр можно с помощью процедуры
<code>XSetFont()</code>.

<br>
<br>

<I>Шаблоны, используемые для заполнения рисуемых
фигур.</I> Процесс рисования включает в себя два этапа. На первом
определяются пиксели, которые должны быть закрашены. После этого цвет
выделенных точек изменяется. Так, для линии входящие в нее пиксели
определяются по специальному алгоритму, а потом закрашиваются, например,
цветом переднего плана.

<br>
<br>

<I>Способ закраски</I> определяется полем
<code>fill_style</code>. Он устанавливается процедурой
<code>XSetFillStyle()</code> и воздействует
на все функции, рисующие линии, текст и фигуры. Исключение составляет случай,
когда выводится линия, для которой значение
<code>line_width</code> равно 0. Возможные значения параметра
<code>fill_style</code> перечислены ниже.
<br>

<UL type=square>
<LI><code>FillSolid</code> -
для закраски используются цвета переднего плана и фона.
</LI>

<LI><code>FillTiled</code> -
для закраски используется карта пикселей, определяемая параметром
<code>tile</code> графического контекста;
при этом карта как бы располагается в окне так, что ее левый верхний угол
имеет координаты <code>ts_x_origin</code> и
<code>ts_y_origin</code>; затем определяется
ее пересечение с рисуемой графикой, и пиксели, попавшие в пересечение,
закрашиваются; значения полей
<code>ts_x_origin</code>, <code>ts_y_origin</code>
устанавливаются процедурой
<code>XSetTSOrigin()</code>; карта
<code>tile</code> должна иметь ту же толщину (число бит-на-пиксел), что и
окно, в котором производится рисование.
</LI>

<LI><code>FillStippled</code>
- для закраски используется карта пикселей, задаваемая полем
<code>stipple</code>; данная карта должна иметь толщину в
1 бит; способ закраски такой же, как и в случае
<code>FillTiled</code> с той лишь разницей, что рисуются лишь те
пиксели графики, которым соответствует установленный бит в карте
<code>stipple</code>; цвет пикселя задается полем
<code>foreground</code>.
</LI>

<LI><code>FillOpaqueStippled</code>
- аналогично значению
<code>FillStippled</code>, только пиксели, для которых не установлен бит в
карте <code>stipple</code>, закрашиваются
цветом фона.
</LI>
</UL>
<br>

Для задания полей
<code>tile</code> и <code>stipple</code>
можно использовать карты любого размера. На некоторых устройствах при
определенных размерах рисование идет намного быстрее. Для получения таких
размеров можно использовать процедуры
<code>XQueryBestSize()</code>,
<code>XQueryBestStipple()</code>,
<code>XQueryBestTile()</code>.

<br>
<br>

<I>Режим заполнения многоугольников</I> указывает, как
заполнять цветом многоугольники, стороны которых пересекаются. Возможные
значения следующие:
<br>

<UL type=square>
<LI><code>EvenOddRule</code>
- заполняются точки фигуры, определяемые по следующему правилу: пусть для
некоторой линии растра <I>n</I><SUB>1</SUB>, <I>n</I><SUB>2</SUB>,
..., <I>n</I><SUB>k</SUB> - стороны многоугольника, которые ее пересекают;
тогда закрашиваются точки между <I>n</I><SUB>1</SUB> и
<I>n</I><SUB>2</SUB>, <I>n</I><SUB>3</SUB> и
<I>n</I><SUB>4</SUB>, и т.д.
</LI>

<LI><code>WindingRule</code>
- заполняется вся внутренность фигуры.
</LI>
</UL>
<br>

<I>Режим заполнения дуг</I> (поле
<code>arc_mode</code>). Параметр задается процедурой
<code>XSetArcMode()</code> и влияет на вид
фигур, рисуемых процедурами
<code>XFillArc()</code> и
<code>XFillArcs()</code>.

<br>
<br>

<I>Влияние подокон</I> на рисование графических примитивов
определяется полем
<code>subwindow_mode</code>. Оно устанавливается процедурой
<code>XSetSubwindowMode()</code> и имеет следующие
значения:

<UL type=square>

<LI><code>ClipByChildren</code> - часть графики, перекрываемая
подокнами, не видна;
</LI>

<LI><code>IncludeInferiors</code> - графика рисуется поверх всех
подокон.
</LI>
</UL>
<br>

<I>Генерация запроса на перерисовку при копировании частей
окон</I> (поле
<code>graphics_exposures</code>). Когда часть окна копируется куда-либо, то
вполне вероятна ситуация, что исходное изображение перекрыто, возможно не
полностью, другими окнами или недоступна по другим причинам. В этом случае
может быть необходимо сообщить клиенту, в окно которого происходит
копирование, что часть нового изображения не может быть получена простым
переносом пикселей, а должна быть перерисована. Если поле
<code>graphics_exposures</code> равно
<code>True</code>, то X посылает при копировании следующее:

<UL type=square>
<LI>одно или несколько событий
<code>GraphicsExpose</code>, если перерисовка необходима;</LI>

<LI>событие
<code>NoExpose</code>, если исходное окно полностью доступно и
дополнительного рисования не требуется.</LI>
</UL>
<br>

Если поле равно
<code>False</code>, то событие не посылается. Устанавливается параметр
процедурой
<code>XSetGraphicsExposures()</code>.

<br>
<br>

<I>Область отсечения</I> (задается полями
<code>clip_mask</code>,
<code>clip_x_origin</code>,
<code>clip_y_origin</code>). Это битовая карта, говорящая о том, какие
пиксели выводятся, а какие нет при всех операциях рисования. Если бит карты
установлен, то соответствующий пиксель появится в окне, а если бит сброшен,
то пиксель будет пропущен. Положение в окне верхнего левого угла области
отсечения определяется параметрами
<code>clip_x_origin</code> и
<code>clip_y_origin</code>.

<br>
<br>

Эти параметры устанавливаются процедурой
<code>XSetClipOrigin()</code>. Сама область отсечения
задается с помощью процедур
<code>XSetClipMask()</code>,
<code>XSetClipRectangles()</code> или
<code>XSetClipRegion()</code>.

</dir>
<br>


<!-- end of CONTENT -->
<!--#include virtual="/t_footer.htm"-->
