<html><head><title>Dos Multi Threader Unit for Turbo pascal</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="description" content="Модуль для организации кооперативной многозадачности, позволяющий выполнять несколько задач-подпрограмм одновременно, независимо друг от друга. В приведенном примере запускаются две подзадачи, каждая из которых наращивает свой счетчик с разной скоростью. Компилируется BP7 в Real/Protected Mode.<br><font color=#666666> A Cooperative Multi Threading Unit for DOS Borland Pascal. This unit makes multi thread process very simple for Borland or Turbo pascal users. It is not preemptive multitasking, so you don't have to worry about DOS reentrancy or using semaphores to lock resources.</font>">
<meta name="keywords" content="pascal, sources, source code, multi1, multtask, Многозадачность в Паскале ">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../sources.css"></head><BODY><center>
<!--#include virtual="/t_hmenu.htm"-->

<div align='left'>&nbsp;&nbsp;&nbsp;<a class='title' href="index.htm">Многозадачность в Паскале</a>&nbsp&nbsp;&nbsp;&nbsp;<small>&gt;&gt;</small>&nbsp;&nbsp;&nbsp;&nbsp;multi1
<br>&nbsp;&nbsp;&nbsp;<img border=0 height=4 width=50% align='top' src="../img/b.gif" alt="">
<br>&nbsp;
</div>

<TABLE cellSpacing=0 cellpadding=0 width=97% border=0>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=70% nowrap>&nbsp;Dos Multi Threader Unit for Turbo pascal</TD>
<TD nowrap class=black>&nbsp;Bill McKee</TD>
<TD class=black align='right'>27.02.93</TD></TR>
<TR vALign=top><TD class=black><br>
<p style="margin-left:20px">Модуль для организации кооперативной многозадачности,
позволяющий выполнять несколько задач-подпрограмм одновременно,
независимо друг от друга. В приведенном примере запускаются
две подзадачи, каждая из которых наращивает свой счетчик
с разной скоростью. Компилируется BP7 в Real/Protected Mode.<br><font color=#666666>
A Cooperative Multi Threading Unit for DOS Borland Pascal.
This unit makes multi thread process very simple for Borland
or Turbo pascal users. It is not preemptive multitasking,
so you don't have to worry about DOS reentrancy or using
semaphores to lock resources.</font></TD><TD class=black colspan=2 align='right'><br><A HREF="multi1.zip"><img border=0 align=middle src="../img/dsk.gif"></A><br>3k&nbsp;</TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD colspan=3><PRE><p style="margin-left:50px">                A Cooperative Multi Threading Unit
                      for DOS Borland Pascal



Many times a need will arise for a program to be able to perform
one or more background tasks. This can be done using several
different codeing techniques but the one I have found that makes
program logic the clearest and leaves a program readable is to
set up the progam as several different independent tasks. This
unit makes that process very simple for Borland or Turbo pascal
users. Since it is not preemptive you don't have to worry about
DOS reentrancy or using semaphores to lock resources .You can set
up locks using simple boolean variables if they are necessary.
But this also places the burden on the programmer to make sure
that each task includes a yield or wait call at appropriate
intervals .

Each thread must have a top level procedure that has no
parameters. This procedure must be an infinite loop, that is, no
return is allowed from the top level procedure of a thread. To
set up multithreading simply call the MAKETASK procedure once for
each thread in the program and then call the START procedure .
The maketask procedure takes the address of a top level thread
procedure and a number that indicates the amount of stack space
this thread requires.

After you Call the Start procedure the multithreading will begi