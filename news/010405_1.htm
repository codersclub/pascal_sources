<html><head><title>New Uploads 05.04.01</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="keywords" content="pascal, sources, free, hardware, new, uploads ">
<meta name="description" content="Новые поступления за 05.04.01. В раздел Управление Памятью добавлено 20 исходников из архива за 1985-1995гг.">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../sources.css"></head><BODY><center>
<!--#include virtual="/t_hmenu.htm"-->

<TABLE cellSpacing=0 cellpadding=5 width=97% border=0>
<tr><td valign='top' width=200>
<!--#include virtual="/t_lmenu2.htm"-->
<td valign='top'>

<p class='title'>New Uploads &nbsp; 05.04.2001
<br><img border=0 height=4 width=50% align='top' src="../img/b.gif" alt="">
</p>
<TABLE cellSpacing=0 cellpadding=0 width=100% border=0>


<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/atextmem.htm" target=_blank>Check Extended Memory Size by Int $15</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">David G. Pardue</A></TD>
<TD class=blackb width=13% align=right>18.02.1986</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">This small program uses Intr($15) to determine the size of the
extended memory - not expanded memory.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/atextmem.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/atextmem.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;10k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/clearmem.htm" target=_blank>Clear Memory to a Fixed Value at the Program Start</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">D.J. Murdoch</A></TD>
<TD class=blackb width=13% align=right>06.06.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">CLEARMEM - A Turbo Pascal unit to automatically initialize the heap, stack, or
data segment to a fixed value.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/clearmem.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/clearmem.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;1k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/dpmi.htm" target=_blank>DPMI.PAS 1.0 - Routines for DPMI Management</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">TurboPower Software</A></TD>
<TD class=blackb width=13% align=right>12.10.1993</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">DPMI.PAS 1.00 (c) TurboPower Software 1992.
Primitive routines for DPMI management.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/dpmi.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/dpmi.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;5k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/ems.htm" target=_blank>EMS.PAS - Module for EMS Management</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:degis@pstu.ac.ru">Dmitry Shpilkin</A></TD>
<TD class=blackb width=13% align=right> 27.04.1997</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">Этот модуль содержит объекты и подпрограммы
для работы с EMS-памятью
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/ems.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/ems.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;10k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/emstulkt.htm" target=_blank>EMS TOOLKIT for C Developers with Pascal Samples</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">Intel Corporation</A></TD>
<TD class=blackb width=13% align=right>24.10.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">The EMS TOOLKIT for C developers. Included
LIM EMS Specification, MemLib and EmmLib for C,
Pascal example how to use EMM
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/emstulkt.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/emstulkt.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;305k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/exec33.htm" target=_blank>EXEC 3.3 - EXEC Function with Memory Swap for TP4-6</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:100023.2042@compuserv.com">Thomas Wagner</A></TD>
<TD class=blackb width=13% align=right>26.11.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">Swap program to XMS, EMS, or Disk, then spawn. Version 3.3 91-11-26.
This file contains full source code (in C, Pascal, and Assembler)
for a module that allows you to swap your program to XMS, EMS, or disk,
and then spawn any DOS program, including COMMAND.COM. I/O redirection
and execution of batch files is handled automatically. Only a small
(about 1k) reload stub is left in memory. Compatible with Microsoft C,
Turbo C, Watcom C, and Turbo Pascal. Recompilation
requires MASM 5.1 or later, or TASM.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/exec33.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/exec33.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;100k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/newmem11.htm" target=_blank>NewMem v1.1 - Memory Management Unit for TP</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:brummett@sparc0a.cs.uiuc.edu">Anthony Brummett</A></TD>
<TD class=blackb width=13% align=right>08.06.1994</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">NewMem and NewMem2 v1.1.
These two units provide memory management extensions to the memory functions
of Turbo Pascal. The NewMem unit provides a greater control over
fragmentation than GetMem and FreeMem. The NewMem2 unit extends things
further by providing a form of virtual memory.
Included TPXMS.ZIP - XMS routines written by Vernon E. Davis, Jr.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/newmem11.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/newmem11.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;33k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/overxms.htm" target=_blank>OVERXMS - Load Overlays in XMS for TP 5.0+</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:2:500/12.10956">Wilbert van Leijen</A></TD>
<TD class=blackb width=13% align=right>05.05.1992</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">This package is for users of Turbo Pascal, version 5.0 or later.
These files are all you need to add XMS support to overlaying.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/overxms.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/overxms.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;4k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/ovrumb12.htm" target=_blank>OvrUMB 1.2 - Use an Upper Memory as Overlay Buffer</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:Jean-Marc.Lasgouttes@inria.fr">Jean-Marc Lasgouttes</A></TD>
<TD class=blackb width=13% align=right>20.09.1994</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">The purpose of this unit for Turbo Pascal 6/7 is to allow your programs
that use overlays to free more conventional memory.  This is made possible
by the relocation of the overlay buffer in upper memory on systems that
support that kind of memory.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/ovrumb12.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/ovrumb12.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;6k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/psdsm103.htm" target=_blank>Pure Power DOS Heap 1.03 for TP 6.0</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:isapeg@images.cs.und.ac.za">Michael Gallias</A></TD>
<TD class=blackb width=13% align=right>27.01.1993</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">This unit replaces GetMem and FreeMem. When using the Turbo
Pascal Heap (in Version 6), you will find that you are not
permitted to get more than 64 kb.<br>
By using {$M <StackSize>,0,0} in your program, no heap is allocated
for your program. This leaves all that memory available to DOS.
You can then get blocks of this memory from the procedures in this
unit, even blocks greater than 64 kb.
Source is included.  Popup help for the unit is available in .NG format.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/psdsm103.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/psdsm103.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;4k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/psstk101.htm" target=_blank>Pure Power Stack (Small) 1.01 for Turbo Pascal 6</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:GALLIAS@ph.und.ac.za">Michael Gallias</A></TD>
<TD class=blackb width=13% align=right>  .18.9930</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">PSSTK101.ZIP - Stack functions for Turbo Pascal 6.
Various stack functions. This emulates a second stack in Turbo
Pascal 6 and thus allows one to push and pop various variables.
Source is included.  Popup help for the unit is available in .NG format.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/psstk101.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/psstk101.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;5k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/psxmh103.htm" target=_blank>Pure Power XMS Heap 1.03 for Turbo Pascal 6.0</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:GALLIAS@ph.und.ac.za">Michael Gallias</A></TD>
<TD class=blackb width=13% align=right>  .18.9930</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">This unit gives  the  pascal  programmer  access  to  an XMS heap for
Pascal.  It uses a similar system to the Pascal standard heap.
This unit is ideal  for  programmers  requiring  many large blocks of
data.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/psxmh103.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/psxmh103.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;8k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/spawn410.htm" target=_blank>SPAWNO 4.10 - Disk/EMS/XMS/INT15 Swapping</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:ralf+@cs.cmu.edu">Ralf Brown</A></TD>
<TD class=blackb width=13% align=right>26.04.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">SPAWNO v4.10 is a disk/EMS/XMS/INT15 swapping replacement for spawn()
(c) 1990,1991,1992 Ralf Brown.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/spawn410.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/spawn410.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;13k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/spawno4.htm" target=_blank>SPAWNO 4.00 - Disk/EMS/XMS/INT15 Swapping</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:ralf+@cs.cmu.edu">Ralf Brown</A></TD>
<TD class=blackb width=13% align=right>17.11.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">SPAWNO v4.00 (11/17/91) is a disk/EMS/XMS/INT15 swapping
replacement for spawn().
(c) 1990,1991 Ralf Brown.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/spawno4.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/spawno4.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;44k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/swap.htm" target=_blank>SWAP - More Memory for DOS Exec for TP 5.0</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">Kim Kokkonen</A></TD>
<TD class=blackb width=13% align=right>13.11.1993</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">We've enhanced the DOS Exec
function by swapping most of the calling program into expanded memory or to
disk, and giving all that free memory to the child process. When the
subprocess is complete, the calling program is swapped back into place and
continues normally.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/swap.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/swap.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;20k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/tp6xms.htm" target=_blank>XMS (eXtended Memory Specification) Unit For TP 6.0</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:yuvalt@wisdocs.weizmann.ac.il">Yuval Tal</A></TD>
<TD class=blackb width=13% align=right>04.03.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">Using the XMS Unit you are able to call all the XMS functions from Turbo
Pascal without having to worry about assembly or anything else.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/tp6xms.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/tp6xms.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;9k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/tpwhuge.htm" target=_blank>HugeMem 0.1 - Huge Global Memory Blocks for Windows</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:IN307@DHAFEU11">Peter Sawatzki</A></TD>
<TD class=blackb width=13% align=right>05.08.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">HugeMem unit manages huge global memory blocks.
This unit uses two undocumented windows 'functions':
__AHShift and __AHIncr,
both are used by Microsoft C and Borland C to handle the HUGE
memory model, so i think it's ok to use it
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/tpwhuge.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/tpwhuge.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;1k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/tpxms.htm" target=_blank>TPXMS 1.01 - Extended Memory Routines for TP4+</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:71330.2705@compuserv.com">Vernon E. Davis, Jr.</A></TD>
<TD class=blackb width=13% align=right>30.07.1989</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">The TPXMS.PAS source code is a Turbo Pascal v4.0 and above Unit that
utilizes the routines in HIMEM.SYS. When compiled, all the functions that
currently defined in the XMS Specification are easily accessable as Pascal
Procedures and Functions with Inline Machine Language calls to the XMM
Manager.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/tpxms.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/tpxms.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;13k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/xmm12.htm" target=_blank>XMM 1.2 - eXpanded Memory Manager for Turbo Pascal</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">Jeroen W. Pluimers</A></TD>
<TD class=blackb width=13% align=right>05.07.1992</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">XMM is a Turbo Pascal eXtended Memory Manager implementation that supports
Microsofts XMS specification level 3.0.
It enables programs running on an AT-like, 386-like or 486-like machine to
use extended memory (memory above the 1 megabyte barrier) to store data and
code.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/xmm12.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/xmm12.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;116k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=60% nowrap>&nbsp;<A class=subheader href="../memory/xmslibr1.htm" target=_blank>Xmslib - XMS library for TP6.0</A></TD>
<TD nowrap>&nbsp;&nbsp;&nbsp;<img border=0 align=bottom src="../img/mail.gif">&nbsp;&nbsp;&nbsp;<A class=blackb href="mailto:">Loewy Ron</A></TD>
<TD class=blackb width=13% align=right>11.08.1991</TD></TR><TR vALign=top><TD class=black colSpan=2><p style="margin-left:20px">XMS library for TP6.0.
xmsLib implements the XMS 2.0 API for Turbo-Pascal 6.0. This package
allows to use virtual memory
references for data in turbo pascal, without the regular limitations of
640K.
<br>&nbsp;&nbsp;&nbsp;&nbsp;<A href="../memory/xmslibr1.htm" target=_blank>Подробнее...</A></TD>
<TD class=blackb align=right><A href="../memory/xmslibr1.zip"><img border=0 align=middle src="../img/dsk.gif"></A>&nbsp;17k</TD></TD></TR><TR><TD>&nbsp;</TD></TR>


<TR><TD colspan=3 align=center><A class=blueb href="../archnew4.htm">Архив поступлений &nbsp;<img border=0 src="../img/next.gif" alt=""></a></TD></TR>
<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
</TABLE></center>
</BODY></HTML>
