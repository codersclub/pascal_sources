<html><head><title>Numerical Integration by the Simpson Method</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="description" content='Два варианта программы для численного интегрирования функции на заданном участке методом Симпсона. В качестве примера приведена функция f(x) = 1/x.'>
<meta name="keywords" content="pascal, sources, source code, simpson, math, Математика ">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../sources.css"></head><BODY><center>

<!--#include virtual="/t_hmenu.htm"-->


<div align='left'>&nbsp;&nbsp;&nbsp;<a class='title' href="index.htm">Математика</a>&nbsp&nbsp;&nbsp;&nbsp;<small>&gt;&gt;</small>&nbsp;&nbsp;&nbsp;&nbsp;simpson
<br>&nbsp;&nbsp;&nbsp;<img border=0 height=4 width=50% align='top' src="../img/b.gif" alt="">
<br>&nbsp;
</div>


<TABLE cellSpacing=0 cellpadding=0 width=97% border=0>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=70% nowrap>&nbsp;Numerical Integration by the Simpson Method</TD>
<TD nowrap class=black>&nbsp;Unknown</TD>
<TD class=black align='right'>03.04.1985</TD></TR>
<TR vALign=top><TD class=black>&#10;<p style="margin-left:20px">Два варианта программы для численного интегрирования
функции на заданном участке методом Симпсона.
В качестве примера приведена функция f(x) = 1/x.</TD><TD class=black colspan=2 align='right'><br><A HREF="simpson.zip"><img border=0 align=middle src="../img/dsk.gif"></A><br>1k&nbsp;</TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD colspan=3><PRE><p style="margin-left:50px">program simp1;      { -&gt; 273 }
{ integration by Simpson's method }

const   tol      = 1.0E-4;
var   sum,upper,lower   : real;

external procedure cls;

function fx(x: real): real;
{ find f(x)=1/x }
{ watch out for x=0 }

begin
  fx:=1.0/x
end;   { function fx }

procedure simps(function f(x: real): real;
      lower,upper,tol   : real;
      var sum      : real);

{ numerical integration by Simpson's rule }
{ function is f (as paramater), limits are lower and upper }
{ with number of regions equal to pieces }
{ partition is delta_x, answer is sum }

var   i      : integer;
   x,delta_x,even_sum,
   odd_sum,end_sum,
   sum1      : real;
   pieces      : integer;
begin
  pieces:=2;
  delta_x:=(upper-lower)/pieces;
  odd_sum:=f(lower+delta_x);
  even_sum:=0.0;
  end_sum:=f(lower)+f(upper);
  sum:=(end_sum+4.0*odd_sum)*delta_x/3.0;
  writeln(pieces:5,sum);
  repeat
    pieces:=pieces*2;
    sum1:=sum;
    delta_x:=(upper-lower)/pieces;
    even_sum:=even_sum+odd_sum;
    odd_sum:=0.0;
    for i:=1 to pieces div 2 do
      begin
   x:=lower+delta_x*(2.0*i-1.0);
   odd_sum:=odd_sum+f(x)
      end;
    sum:=(end_sum+4.0*odd_sum+2.0*even_sum)*delta_x/3.0;
    writeln(pieces:5,sum)
  until abs(sum-sum1)&lt;=abs(tol*sum)
end;   { simps }

begin      { main program }
  cls;
  lower:=1.0;
  upper:=9.0;
  writeln;
  simps(fx,lower,upper,tol,sum);
  writeln;
  writeln(chr(7),'area= ',sum)
end.</PRE>

<!--#include virtual="/t_footer.htm"-->
