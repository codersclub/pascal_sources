<html><head><title>Gamma Function Calculation</title>
<meta http-equiv="Content-Type" content="text/html; charset=windows-1251">
<meta name="description" content='Программа для вычисления Гамма-функции для ряда точек: gamma:=(sqrt(2*pi/y)*exp(y*ln(y)+(1-1/(30*y*y))/(12*y)-y))/(x*(x+1)) A program to test the gamma function.'>
<meta name="keywords" content="pascal, sources, source code, gammapas, math, Математика ">
<LINK REL=STYLESHEET TYPE="text/css" HREF="../sources.css"></head><BODY><center>

<!--#include virtual="/t_hmenu.htm"-->


<div align='left'>&nbsp;&nbsp;&nbsp;<a class='title' href="index.htm">Математика</a>&nbsp&nbsp;&nbsp;&nbsp;<small>&gt;&gt;</small>&nbsp;&nbsp;&nbsp;&nbsp;gammapas
<br>&nbsp;&nbsp;&nbsp;<img border=0 height=4 width=50% align='top' src="../img/b.gif" alt="">
<br>&nbsp;
</div>


<TABLE cellSpacing=0 cellpadding=0 width=97% border=0>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD class=subheader width=70% nowrap>&nbsp;Gamma Function Calculation</TD>
<TD nowrap class=black>&nbsp;Unknown</TD>
<TD class=black align='right'>03.04.1985</TD></TR>
<TR vALign=top><TD class=black>&#10;<p style="margin-left:20px">Программа для вычисления Гамма-функции для ряда точек:
gamma:=(sqrt(2*pi/y)*exp(y*ln(y)+(1-1/(30*y*y))/(12*y)-y))/(x*(x+1))
A program to test the gamma function.</TD><TD class=black colspan=2 align='right'><br><A HREF="gammapas.zip"><img border=0 align=middle src="../img/dsk.gif"></A><br>1k&nbsp;</TD></TR><TR><TD>&nbsp;</TD></TR>

<TR class=subheader><TD colSpan=3><IMG height=2 src="../img/1x1.gif" width=1></td></tr>
<TR><TD colspan=3><PRE><p style="margin-left:50px">program tstgam;		{ -&gt; 340 }
{ test the gamma function }

var	x	: real;

external procedure cls;

function gamma(x: real): real;
const	pi	= 3.1415926;

var	i,j	: integer;
	y,gam	: real;

begin		{ gamma function }
  if x&gt;=0.0 then
    begin
      y:=x+2.0;
      gam:=sqrt(2*pi/y)*exp(y*ln(y)+(1-1/(30*y*y))/(12*y)-y);
      gamma:=gam/(x*(x+1))
    end
  else		{ x&lt;0 }
    begin
      j:=0;
      y:=x;
      repeat
	j:=j+1;
	y:=y+1.0
      until y&gt;0.0;
      gam:=gamma(y);		{ recursive call }
      for i:=0 to j-1 do
	gam:=gam/(x+i);
      gamma:=gam
    end	{ x&lt;0 }
end;		{ gamma function }

begin
  cls;
  writeln;
  repeat
    repeat
      write('X: ');
      read(x)
    until x&lt;&gt;0.0;
    writeln('Gamma is ',gamma(x))
  until x&lt;-22.0;
end.</PRE>

<!--#include virtual="/t_footer.htm"-->
